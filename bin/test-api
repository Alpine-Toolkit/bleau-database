#! /usr/bin/env python3

####################################################################################################
#
# Bleau Database - A database of the bouldering area of Fontainebleau
# Copyright (C) 2015 Fabrice Salvaire
#
# This program is free software: you can redistribute it and/or modify
# it under the terms of the GNU Affero General Public License as
# published by the Free Software Foundation, either version 3 of the
# License, or (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Affero General Public License for more details.
#
# You should have received a copy of the GNU Affero General Public License
# along with this program.  If not, see <http://www.gnu.org/licenses/>.
#
####################################################################################################

####################################################################################################

import argparse

from BleauDataBase.BleauDataBase import BleauDataBase

####################################################################################################

parser = argparse.ArgumentParser(description='Importer')

parser.add_argument('json_file', metavar='json_file',
                    help='JSON file')

args = parser.parse_args()

####################################################################################################

bleau_database = BleauDataBase(json_file=args.json_file)

from BleauDataBase.Statistics import CircuitStatistics

circuit_statistics = CircuitStatistics(bleau_database.circuits)
grade_counters = circuit_statistics.circuit_grade_histogram
title = 'Cotations des Blocs'

grade_counters = [grade_counter for grade_counter in grade_counters]

data = {
    'labels': [str(grade_counter) for grade_counter in grade_counters],
    'counts': [grade_counter.count for grade_counter in grade_counters],
}


from io import StringIO

import numpy as np

import matplotlib
matplotlib.use('Agg')

from matplotlib.backends.backend_agg import FigureCanvasAgg as FigureCanvas
from matplotlib.figure import Figure
import matplotlib.pyplot as plt

dpi = 100
figure_width = 800 / dpi
aspect_ratio = 16 / 9
figure_height = figure_width / aspect_ratio

figure = Figure(figsize=(figure_width, figure_height), dpi=dpi, facecolor='white')
axes = figure.add_subplot(1,1,1)
y = data['counts']
x = np.arange(len(y))
width = .5
bar_chart = axes.bar(x, y, width=width, color='r', edgecolor='white')

axes.set_ylabel('counts')
axes.set_title('Histogram')
axes.set_xticks(x + width/2)
axes.xaxis.set_tick_params(width=0)
axes.set_xticklabels(data['labels'], rotation=45, x=x)
axes.grid(axis='y')

canvas = FigureCanvas(figure)
image_data = StringIO()
canvas.print_figure(image_data, format='svg')

print(image_data.getvalue())

# from bokeh.charts import Bar, output_file, show

# p = Bar(data, values='counts', label='labels', title=title, tools='',
#         xlabel='',
#         ylabel='',
#         plot_width=300,
#         plot_height=150,
#         responsive=True,
#         toolbar_location=None,
# )
# output_file("bar.html")
# show(p)

# for affiliation in bleau_database.affiliations:
#     print(affiliation)

# for person in bleau_database.persons:
#     print(person.last_first_name, person._opened_circuits)
    # for circuit in person.opened_circuits:
    #     print(person.last_first_name, circuit)

# print(list(bleau_database.affiliations))

####################################################################################################
#
# End
#
####################################################################################################
